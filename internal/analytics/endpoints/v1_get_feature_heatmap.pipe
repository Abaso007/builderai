TOKEN "web-apps" READ

DESCRIPTION >
    Get a heatmap matrix of feature usage percentage across plan versions.
    Returns feature_slug vs plan_slug matrix with usage percentages, active users count,
    and raw verification/usage numbers for the specified project and time period.

TAGS "heatmap", "features", "plans", "usage"

NODE feature_heatmap_node
SQL >
    %
    WITH plan_features AS (
        -- Get actual plan-feature combinations from plan_version_features
        SELECT DISTINCT
            pv.plan_slug,
            pv.id as plan_version_id,
            f.slug as feature_slug,
            pv.project_id as project_id
        FROM unprice_plan_versions pv
        INNER JOIN unprice_plan_version_features pvf ON pv.id = pvf.plan_version_id
        INNER JOIN unprice_features f ON pvf.feature_id = f.id AND f.project_id = pv.project_id
        WHERE 1 = 1
        {% if defined(projectId) %}
            AND pv.project_id = {{ String(projectId) }}
        {% end %}
    ),

    usage_stats AS (
        -- Aggregate usage data from materialized view
        SELECT
            projectId,
            featureSlug,
            countMerge(count) as total_usage_count,
            sumMerge(sum) as total_usage_sum
        FROM unprice_feature_usage_hourly_mv
        WHERE 1 = 1
        {% if defined(projectId) %}
            AND projectId = {{ String(projectId) }}
        {% end %}
        {% if defined(start) & defined(end) %}
            AND date BETWEEN fromUnixTimestamp64Milli({{ Int64(start) }})
            AND fromUnixTimestamp64Milli({{ Int64(end) }})
        {% elif defined(intervalDays) %}
            AND date >= toStartOfDay(today() - {{ Int32(intervalDays) }})
        {% else %}
            AND date >= toStartOfDay(today() - 7)
        {% end %}
        GROUP BY projectId, featureSlug
    ),

    verification_stats AS (
        -- Aggregate verification data from materialized view
        SELECT
            projectId,
            featureSlug,
            countMerge(count) as total_verification_count
        FROM unprice_feature_verifications_hourly_mv
        WHERE 1 = 1
        {% if defined(projectId) %}
            AND projectId = {{ String(projectId) }}
        {% end %}
        {% if defined(start) & defined(end) %}
            AND date BETWEEN fromUnixTimestamp64Milli({{ Int64(start) }})
            AND fromUnixTimestamp64Milli({{ Int64(end) }})
        {% elif defined(intervalDays) %}
            AND date >= toStartOfDay(today() - {{ Int32(intervalDays) }})
        {% else %}
            AND date >= toStartOfDay(today() - 7)
        {% end %}
        GROUP BY projectId, featureSlug
    ),

    total_activity AS (
        SELECT
            sum(us.total_usage_count) + sum(vs.total_verification_count) as max_activity
        FROM usage_stats us
        FULL OUTER JOIN verification_stats vs ON us.projectId = vs.projectId
    )

        SELECT
        pf.plan_slug,
        pf.feature_slug,
        pf.project_id,

        -- Usage metrics (aggregated)
        sum(coalesce(us.total_usage_count, 0)) as usage_count,
        sum(coalesce(us.total_usage_sum, 0)) as usage_sum,

        -- Verification metrics (aggregated)
        sum(coalesce(vs.total_verification_count, 0)) as verification_count,

        -- Activity score as percentage of total system activity
        CASE
            WHEN ta.max_activity > 0
            THEN round(
                ((sum(coalesce(us.total_usage_count, 0)) + sum(coalesce(vs.total_verification_count, 0))) * 100.0) / ta.max_activity,
                2
            )
            ELSE 0
        END as activity_score

    FROM plan_features pf
    LEFT JOIN usage_stats us
        ON pf.feature_slug = us.featureSlug
        AND pf.project_id = us.projectId
    LEFT JOIN verification_stats vs
        ON pf.feature_slug = vs.featureSlug
        AND pf.project_id = vs.projectId
    CROSS JOIN total_activity ta
    GROUP BY
        pf.plan_slug,
        pf.feature_slug,
        pf.project_id,
        ta.max_activity
    ORDER BY
        activity_score DESC,
        pf.feature_slug,
        pf.plan_slug

TYPE endpoint