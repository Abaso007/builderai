name: Deploy API Staging
on:
  workflow_call:

env:
  SKIP_ENV_VALIDATION: 1

jobs:
  deploy:
    environment: Preview
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install
        uses: ./.github/actions/install
        with:
          ts: true

      - uses: Infisical/secrets-action@v1.0.7
        name: Pull secrets from Infisical
        with:
          client-id: ${{ secrets.MACHINE_IDENTITY_CLIENT_ID }}
          client-secret: ${{ secrets.MACHINE_IDENTITY_CLIENT_SECRET }}
          env-slug: "preview"
          project-slug: "unprice-zq-xm"
          secret-path: "/"
          recursive: true

      - name: Build
        run: pnpm turbo run build --filter='./apps/api'

      - name: Version
        run: echo "VERSION=$(git rev-parse --short HEAD)" >> $GITHUB_ENV

      - name: Install Wrangler
        shell: bash
        run: |
          npm i -g wrangler@4.3.0
          wrangler --version

      - name: Deploy with Wrangler
        uses: cloudflare/wrangler-action@v3.14.1
        with:
          apiToken: ${{ env.CLOUDFLARE_API_TOKEN }}
          wranglerVersion: "4.3.0"
          environment: "preview"
          packageManager: "pnpm"
          workingDirectory: "apps/api"
          # Pass secrets to Worker
          vars: |
            CLOUDFLARE_API_TOKEN
            TINYBIRD_TOKEN
            TINYBIRD_URL
            AUTH_SECRET
            COOKIE_ENCRYPTION_KEY
            DATABASE_URL
            DATABASE_READ1_URL
            DATABASE_READ2_URL
            EMIT_METRICS_LOGS
            VERSION
            NODE_ENV
        env:
          CLOUDFLARE_API_TOKEN: ${{ env.CLOUDFLARE_API_TOKEN }}
          TINYBIRD_TOKEN: ${{ env.TINYBIRD_TOKEN }}
          TINYBIRD_URL: ${{ env.TINYBIRD_URL }}
          COOKIE_ENCRYPTION_KEY: ${{ env.COOKIE_ENCRYPTION_KEY }}
          AUTH_SECRET: ${{ env.AUTH_SECRET }}
          DATABASE_URL: ${{ env.DATABASE_URL }}
          DATABASE_READ1_URL: ${{ env.DATABASE_READ1_URL }}
          DATABASE_READ2_URL: ${{ env.DATABASE_READ2_URL }}
          EMIT_METRICS_LOGS: ${{ env.EMIT_METRICS_LOGS }}
          VERSION: ${{ env.VERSION }}
          NODE_ENV: ${{ env.NODE_ENV }}