name: Tinybird CD

inputs:
  data_project_dir:
    description: "relative path of the folder containing the data project"
    required: false
    type: string
    default: .
  git_depth:
    description: "Number of commits to fetch. 0 indicates all history for all branches and tags"
    required: false
    type: number
    default: 0
  tb_env:
    description: "a global environment variable to replace inside the jobs and run conditional workflows (e.g. staging/production deployments)"
    required: false
    type: string
  tb_admin_token:
    required: true
  tb_host:
    required: true

runs:
  using: "composite"

  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: ${{ inputs.git_depth }}
        ref: ${{ github.event.pull_request.head.sha }}

    - uses: actions/setup-python@v5
      with:
        python-version: "3.11"
        architecture: "x64"
        cache: 'pip'

    - name: Validate input
      shell: bash
      run: |
        [[ "${{ inputs.tb_admin_token }}" ]] || { echo "Go to the tokens section in your Workspace, copy the 'admin token' and set TB_ADMIN_TOKEN as a Secret in your Git repository"; exit 1; }

    - name: Set environment variables
      shell: bash
      working-directory: ${{ inputs.data_project_dir }}
      run: |
        GIT_BRANCH=${GITHUB_HEAD_REF}
        [[ -z "${_ENV_FLAGS}" ]] && _ENV_FLAGS="${{ inputs.use_last_partition && '--last-partition ' || '' }}--wait"
        _NORMALIZED_BRANCH_NAME=$(echo $GIT_BRANCH | rev | cut -d "/" -f 1 | rev | tr '.-' '_')

        echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
        echo "_ENV_FLAGS=$_ENV_FLAGS" >> $GITHUB_ENV
        echo "_NORMALIZED_BRANCH_NAME=$_NORMALIZED_BRANCH_NAME" >> $GITHUB_ENV
        echo "TB_ENV=${{ inputs.tb_env }}" >> $GITHUB_ENV
        grep -v '^#' .tinyenv >> $GITHUB_ENV
        echo >> $GITHUB_ENV # Ensures new line at the end of the file
        BRANCH_NAME="ci_${_NORMALIZED_BRANCH_NAME}"
        echo "BRANCH_NAME=$BRANCH_NAME" >> $GITHUB_ENV

    - name: Install Tinybird CLI
      shell: bash
      run: |
        if [ -f "requirements.txt" ]; then
          pip install -r requirements.txt
        else
          pip install tinybird-cli
        fi

    - name: Tinybird version
      shell: bash
      run: tb --version

    - name: Check auth
      shell: bash
      run: |
        tb --host ${{ inputs.tb_host }} --token ${{ inputs.tb_admin_token }} auth info

    - name: Deploy changes to the main Workspace
      shell: bash
      run: |
        DEPLOY_FILE=./deploy/${VERSION}/deploy.sh
        if [ ! -f "$DEPLOY_FILE" ]; then
          echo "$DEPLOY_FILE not found, running default tb deploy command"
          tb deploy ${CD_FLAGS}
          tb release ls
        fi

    - name: Custom deployment to the main Workspace
      shell: bash
      run: |
        DEPLOY_FILE=./deploy/${VERSION}/deploy.sh
        if [ -f "$DEPLOY_FILE" ]; then
          echo "$DEPLOY_FILE found"
          if ! [ -x "$DEPLOY_FILE" ]; then
            echo "Error: You do not have permission to execute '$DEPLOY_FILE'. Run:"
            echo "> chmod +x $DEPLOY_FILE"
            echo "and commit your changes"
            exit 1
          else
            $DEPLOY_FILE
          fi
        fi

    - name: Get env token
      shell: bash
      run: |
        ENV_TOKEN=$(python -c "import json; print(json.load(open('.tinyb'))['token'])")
        echo "::add-mask::$ENV_TOKEN"
        echo "TB_ENV_TOKEN=$ENV_TOKEN" >> $GITHUB_ENV

    - name: Post deploy
      shell: bash
      run: |
        POSTDEPLOY_FILE=./deploy/${VERSION}/postdeploy.sh
        if [ -f "$POSTDEPLOY_FILE" ]; then
          if ! [ -x "$POSTDEPLOY_FILE" ]; then
            echo "Error: You do not have permission to execute '$POSTDEPLOY_FILE'. Run:"
            echo "> chmod +x $POSTDEPLOY_FILE"
            echo "and commit your changes"
            exit 1
          else
            $POSTDEPLOY_FILE
          fi
        fi

    - name: delete token info
      shell: bash
      working-directory: ${{ inputs.data_project_dir }}
      if: always()
      run: |
        rm .tinyb || true
