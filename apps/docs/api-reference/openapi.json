{
  "openapi": "3.1.0",
  "info": {
    "title": "Unprice API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "https://api.unprice.dev",
      "description": "Production"
    }
  ],
  "x-speakeasy-retries": {
    "strategy": "backoff",
    "backoff": {
      "initialInterval": 50,
      "maxInterval": 1000,
      "maxElapsedTime": 30000,
      "exponent": 1.5
    },
    "statusCodes": ["5XX"],
    "retryConnectionErrors": true
  },
  "security": [
    {
      "bearerAuth": []
    }
  ],
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "bearerFormat": "root key",
        "type": "http",
        "scheme": "bearer",
        "x-speakeasy-example": "UNPRICE_API_KEY"
      }
    },
    "schemas": {
      "ErrBadRequest": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["BAD_REQUEST"],
                "description": "A machine readable error code.",
                "example": "BAD_REQUEST"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/BAD_REQUEST"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrUnauthorized": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["UNAUTHORIZED"],
                "description": "A machine readable error code.",
                "example": "UNAUTHORIZED"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/UNAUTHORIZED"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrForbidden": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["FORBIDDEN"],
                "description": "A machine readable error code.",
                "example": "FORBIDDEN"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/FORBIDDEN"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrNotFound": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["NOT_FOUND"],
                "description": "A machine readable error code.",
                "example": "NOT_FOUND"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/NOT_FOUND"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrConflict": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["CONFLICT"],
                "description": "A machine readable error code.",
                "example": "CONFLICT"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/CONFLICT"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrPreconditionFailed": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["PRECONDITION_FAILED"],
                "description": "A machine readable error code.",
                "example": "PRECONDITION_FAILED"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/PRECONDITION_FAILED"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrTooManyRequests": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["TOO_MANY_REQUESTS"],
                "description": "A machine readable error code.",
                "example": "TOO_MANY_REQUESTS"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/TOO_MANY_REQUESTS"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      },
      "ErrInternalServerError": {
        "type": "object",
        "properties": {
          "error": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "enum": ["INTERNAL_SERVER_ERROR"],
                "description": "A machine readable error code.",
                "example": "INTERNAL_SERVER_ERROR"
              },
              "docs": {
                "type": "string",
                "description": "A link to our documentation with more details about this error code",
                "example": "https://docs.unprice.dev/api-reference/errors/code/INTERNAL_SERVER_ERROR"
              },
              "message": {
                "type": "string",
                "description": "A human readable explanation of what went wrong"
              },
              "requestId": {
                "type": "string",
                "description": "Please always include the requestId in your error report",
                "example": "req_1234"
              }
            },
            "required": ["code", "docs", "message", "requestId"]
          }
        },
        "required": ["error"]
      }
    },
    "parameters": {}
  },
  "paths": {
    "/v1/customer/reportUsage": {
      "post": {
        "operationId": "customer.reportUsage",
        "summary": "report usage",
        "description": "Report usage for a customer",
        "tags": ["customer"],
        "requestBody": {
          "description": "The usage to report",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The customer ID",
                    "example": "cus_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "featureSlug": {
                    "type": "string",
                    "description": "The feature slug",
                    "example": "tokens"
                  },
                  "usage": {
                    "type": "number",
                    "description": "The usage",
                    "example": 30
                  },
                  "idempotenceKey": {
                    "type": "string",
                    "format": "uuid",
                    "description": "The idempotence key",
                    "example": "123e4567-e89b-12d3-a456-426614174000"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The metadata",
                    "example": {
                      "action": "create",
                      "country": "US"
                    }
                  }
                },
                "required": ["customerId", "featureSlug", "usage", "idempotenceKey"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the report usage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "cacheHit": {
                      "type": "boolean"
                    },
                    "remaining": {
                      "type": "number"
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/{customerId}/getEntitlements": {
      "get": {
        "operationId": "customer.getEntitlements",
        "summary": "get entitlements",
        "description": "Get entitlements for a customer",
        "tags": ["customer"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The customer ID",
              "example": "cus_1H7KQFLr7RepUyQBKdnvY"
            },
            "required": true,
            "name": "customerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the delete customer",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "entitlements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "featureSlug": {
                            "type": "string"
                          },
                          "validFrom": {
                            "type": "number"
                          },
                          "validTo": {
                            "type": "number",
                            "nullable": true
                          },
                          "featureType": {
                            "type": "string",
                            "enum": ["flat", "tier", "package", "usage"]
                          },
                          "usage": {
                            "type": "string"
                          },
                          "limit": {
                            "type": "number",
                            "nullable": true
                          },
                          "featurePlanVersionId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "aggregationMethod": {
                            "type": "string",
                            "enum": [
                              "sum",
                              "sum_all",
                              "last_during_period",
                              "count",
                              "count_all",
                              "max",
                              "max_all"
                            ]
                          },
                          "units": {
                            "type": "number",
                            "nullable": true
                          },
                          "id": {
                            "type": "string",
                            "maxLength": 36
                          }
                        },
                        "required": [
                          "featureSlug",
                          "validFrom",
                          "validTo",
                          "featureType",
                          "usage",
                          "limit",
                          "featurePlanVersionId",
                          "aggregationMethod",
                          "units",
                          "id"
                        ]
                      }
                    }
                  },
                  "required": ["entitlements"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/can": {
      "post": {
        "operationId": "customer.can",
        "summary": "can feature",
        "description": "Check if a customer can use a feature",
        "tags": ["customer"],
        "requestBody": {
          "description": "Body of the request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The customer ID",
                    "example": "cus_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "featureSlug": {
                    "type": "string",
                    "description": "The feature slug",
                    "example": "tokens"
                  },
                  "metadata": {
                    "type": "object",
                    "additionalProperties": {
                      "type": "string"
                    },
                    "description": "The metadata",
                    "example": {
                      "action": "create",
                      "country": "US"
                    }
                  }
                },
                "required": ["customerId", "featureSlug"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the can check",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    },
                    "deniedReason": {
                      "type": "string",
                      "enum": [
                        "RATE_LIMITED",
                        "CUSTOMER_SUBSCRIPTION_NOT_FOUND",
                        "ENTITLEMENT_NOT_FOUND",
                        "LIMIT_EXCEEDED",
                        "ENTITLEMENT_EXPIRED",
                        "ENTITLEMENT_NOT_ACTIVE"
                      ]
                    },
                    "cacheHit": {
                      "type": "boolean"
                    },
                    "remaining": {
                      "type": "number"
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/reset-entitlements": {
      "post": {
        "operationId": "customer.resetEntitlements",
        "summary": "reset entitlements",
        "description": "Reset entitlements for a customer",
        "tags": ["customer"],
        "requestBody": {
          "description": "The customer ID",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The customer ID",
                    "example": "cus_1H7KQFLr7RepUyQBKdnvY"
                  }
                },
                "required": ["customerId"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the reset entitlements",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean"
                    },
                    "message": {
                      "type": "string"
                    }
                  },
                  "required": ["success"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/{customerId}/getSubscription": {
      "get": {
        "operationId": "customer.getSubscription",
        "summary": "get subscription",
        "description": "Get subscription with the active phase for a customer",
        "tags": ["customer"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The customer ID",
              "example": "cus_1H7KQFLr7RepUyQBKdnvY"
            },
            "required": true,
            "name": "customerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the get subscription",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 36
                    },
                    "projectId": {
                      "type": "string",
                      "maxLength": 36
                    },
                    "createdAtM": {
                      "type": "number"
                    },
                    "updatedAtM": {
                      "type": "number"
                    },
                    "customerId": {
                      "type": "string",
                      "maxLength": 36
                    },
                    "status": {
                      "type": "string",
                      "enum": [
                        "idle",
                        "renewing",
                        "changing",
                        "canceling",
                        "expiring",
                        "invoicing",
                        "invoiced",
                        "ending_trial",
                        "active",
                        "trialing",
                        "canceled",
                        "expired",
                        "past_due"
                      ]
                    },
                    "active": {
                      "type": "boolean"
                    },
                    "planSlug": {
                      "type": "string",
                      "minLength": 1
                    },
                    "timezone": {
                      "type": "string",
                      "minLength": 1
                    },
                    "locked": {
                      "type": "boolean"
                    },
                    "lockedAt": {
                      "type": "number",
                      "nullable": true
                    },
                    "currentCycleStartAt": {
                      "type": "number"
                    },
                    "currentCycleEndAt": {
                      "type": "number"
                    },
                    "previousCycleStartAt": {
                      "type": "number",
                      "nullable": true
                    },
                    "previousCycleEndAt": {
                      "type": "number",
                      "nullable": true
                    },
                    "invoiceAt": {
                      "type": "number"
                    },
                    "renewAt": {
                      "type": "number"
                    },
                    "endAt": {
                      "type": "number",
                      "nullable": true
                    },
                    "lastRenewAt": {
                      "type": "number"
                    },
                    "lastInvoiceAt": {
                      "type": "number"
                    },
                    "metadata": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "reason": {
                          "type": "string",
                          "enum": [
                            "payment_failed",
                            "invoice_voided",
                            "payment_pending",
                            "payment_method_not_found",
                            "policy_violation",
                            "pending_cancellation",
                            "invoice_failed",
                            "invoice_pending",
                            "payment_received",
                            "pending_change",
                            "pending_expiration",
                            "trial_ended",
                            "user_requested",
                            "admin_requested",
                            "ending",
                            "renewed",
                            "cancelled",
                            "auto_renew_disabled",
                            "customer_signout"
                          ],
                          "description": "Reason for the subscription status"
                        },
                        "note": {
                          "type": "string",
                          "description": "Note about status in the subscription"
                        },
                        "dates": {
                          "type": "object",
                          "properties": {
                            "lastChangeAt": {
                              "type": "number",
                              "description": "Date of the last change"
                            },
                            "cancelAt": {
                              "type": "number",
                              "description": "Date of the cancellation"
                            }
                          },
                          "description": "Important dates for the subscription"
                        }
                      }
                    },
                    "project": {
                      "type": "object",
                      "properties": {
                        "enabled": {
                          "type": "boolean"
                        }
                      },
                      "required": ["enabled"]
                    },
                    "customer": {
                      "type": "object",
                      "properties": {
                        "active": {
                          "type": "boolean"
                        }
                      },
                      "required": ["active"]
                    }
                  },
                  "required": [
                    "id",
                    "projectId",
                    "createdAtM",
                    "updatedAtM",
                    "customerId",
                    "status",
                    "active",
                    "planSlug",
                    "timezone",
                    "locked",
                    "lockedAt",
                    "currentCycleStartAt",
                    "currentCycleEndAt",
                    "previousCycleStartAt",
                    "previousCycleEndAt",
                    "invoiceAt",
                    "renewAt",
                    "endAt",
                    "lastRenewAt",
                    "lastInvoiceAt",
                    "metadata",
                    "project",
                    "customer"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/{customerId}/getActivePhase": {
      "get": {
        "operationId": "customer.getActivePhase",
        "summary": "get active phase",
        "description": "Get active phase for a customer",
        "tags": ["customer"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The customer ID",
              "example": "cus_1H7KQFLr7RepUyQBKdnvY"
            },
            "required": true,
            "name": "customerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the get active phase",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "string",
                      "maxLength": 36
                    },
                    "projectId": {
                      "type": "string",
                      "maxLength": 36
                    },
                    "createdAtM": {
                      "type": "number"
                    },
                    "updatedAtM": {
                      "type": "number"
                    },
                    "subscriptionId": {
                      "type": "string",
                      "maxLength": 36
                    },
                    "planVersionId": {
                      "type": "string",
                      "minLength": 1
                    },
                    "paymentMethodId": {
                      "type": "string",
                      "nullable": true
                    },
                    "trialDays": {
                      "type": "integer",
                      "nullable": true,
                      "minimum": 0,
                      "default": 0
                    },
                    "billingAnchor": {
                      "type": "number"
                    },
                    "trialEndsAt": {
                      "type": "number",
                      "nullable": true
                    },
                    "startAt": {
                      "type": "number"
                    },
                    "endAt": {
                      "type": "number",
                      "nullable": true
                    },
                    "metadata": {
                      "type": "object",
                      "nullable": true,
                      "properties": {
                        "note": {
                          "type": "string",
                          "description": "Note about the subscription phase"
                        },
                        "reason": {
                          "type": "string",
                          "enum": [
                            "payment_failed",
                            "invoice_voided",
                            "payment_pending",
                            "payment_method_not_found",
                            "policy_violation",
                            "pending_cancellation",
                            "invoice_failed",
                            "invoice_pending",
                            "payment_received",
                            "pending_change",
                            "pending_expiration",
                            "trial_ended",
                            "user_requested",
                            "admin_requested",
                            "ending",
                            "renewed",
                            "cancelled",
                            "auto_renew_disabled",
                            "customer_signout"
                          ],
                          "description": "Reason for the subscription phase"
                        }
                      }
                    },
                    "items": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "projectId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "createdAtM": {
                            "type": "number"
                          },
                          "updatedAtM": {
                            "type": "number"
                          },
                          "units": {
                            "type": "number",
                            "nullable": true
                          },
                          "featurePlanVersionId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "subscriptionPhaseId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "subscriptionId": {
                            "type": "string",
                            "maxLength": 36
                          }
                        },
                        "required": [
                          "id",
                          "projectId",
                          "createdAtM",
                          "updatedAtM",
                          "units",
                          "featurePlanVersionId",
                          "subscriptionPhaseId",
                          "subscriptionId"
                        ]
                      }
                    },
                    "planVersion": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "maxLength": 36
                        },
                        "projectId": {
                          "type": "string",
                          "maxLength": 36
                        },
                        "createdAtM": {
                          "type": "number"
                        },
                        "updatedAtM": {
                          "type": "number"
                        },
                        "planId": {
                          "type": "string",
                          "maxLength": 36
                        },
                        "description": {
                          "type": "string"
                        },
                        "latest": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "title": {
                          "type": "string",
                          "maxLength": 50
                        },
                        "tags": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "active": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "nullable": true,
                          "enum": ["draft", "published"]
                        },
                        "publishedAt": {
                          "type": "number",
                          "nullable": true
                        },
                        "publishedBy": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 36
                        },
                        "archived": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "archivedAt": {
                          "type": "number",
                          "nullable": true
                        },
                        "archivedBy": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 36
                        },
                        "paymentProvider": {
                          "type": "string",
                          "enum": ["stripe", "square"]
                        },
                        "dueBehaviour": {
                          "type": "string",
                          "enum": ["cancel", "downgrade"]
                        },
                        "currency": {
                          "type": "string",
                          "enum": ["USD", "EUR"]
                        },
                        "billingConfig": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "billingInterval": {
                              "type": "string",
                              "enum": ["month", "year", "day", "minute", "onetime"]
                            },
                            "billingIntervalCount": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 12
                            },
                            "billingAnchor": {
                              "anyOf": [
                                {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 31,
                                  "description": "Days of the month. Pick a number between 1 and 31, if the month has less days, it will be the last day of the month"
                                },
                                {
                                  "type": "string",
                                  "enum": ["dayOfCreation"],
                                  "description": "the day of the creation of the subscription as the billing anchor"
                                }
                              ],
                              "default": "dayOfCreation"
                            },
                            "planType": {
                              "type": "string",
                              "enum": ["recurring", "onetime"]
                            }
                          },
                          "required": [
                            "name",
                            "billingInterval",
                            "billingIntervalCount",
                            "planType"
                          ],
                          "description": "The billing configuration for the plan version"
                        },
                        "whenToBill": {
                          "type": "string",
                          "enum": ["pay_in_advance", "pay_in_arrear"]
                        },
                        "gracePeriod": {
                          "type": "number"
                        },
                        "collectionMethod": {
                          "type": "string",
                          "enum": ["charge_automatically", "send_invoice"]
                        },
                        "trialDays": {
                          "type": "number"
                        },
                        "autoRenew": {
                          "type": "boolean"
                        },
                        "metadata": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "externalId": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentMethodRequired": {
                          "type": "boolean"
                        },
                        "version": {
                          "type": "number"
                        }
                      },
                      "required": [
                        "id",
                        "projectId",
                        "createdAtM",
                        "updatedAtM",
                        "planId",
                        "description",
                        "latest",
                        "title",
                        "tags",
                        "active",
                        "status",
                        "publishedAt",
                        "publishedBy",
                        "archived",
                        "archivedAt",
                        "archivedBy",
                        "paymentProvider",
                        "dueBehaviour",
                        "currency",
                        "billingConfig",
                        "whenToBill",
                        "gracePeriod",
                        "collectionMethod",
                        "trialDays",
                        "autoRenew",
                        "metadata",
                        "paymentMethodRequired",
                        "version"
                      ]
                    },
                    "customerEntitlements": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "projectId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "createdAtM": {
                            "type": "number"
                          },
                          "updatedAtM": {
                            "type": "number"
                          },
                          "customerId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "subscriptionId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "featurePlanVersionId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "subscriptionItemId": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 36
                          },
                          "subscriptionPhaseId": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 36
                          },
                          "limit": {
                            "type": "number",
                            "nullable": true
                          },
                          "units": {
                            "type": "number",
                            "nullable": true
                          },
                          "usage": {
                            "type": "string"
                          },
                          "accumulatedUsage": {
                            "type": "string"
                          },
                          "realtime": {
                            "type": "boolean"
                          },
                          "type": {
                            "type": "string",
                            "enum": ["feature", "addon"]
                          },
                          "validFrom": {
                            "type": "number"
                          },
                          "validTo": {
                            "type": "number",
                            "nullable": true
                          },
                          "bufferPeriodDays": {
                            "type": "number"
                          },
                          "resetedAt": {
                            "type": "number"
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "isCustom": {
                            "type": "boolean"
                          },
                          "lastUsageUpdateAt": {
                            "type": "number"
                          },
                          "metadata": {
                            "type": "object",
                            "nullable": true,
                            "additionalProperties": {
                              "anyOf": [
                                {
                                  "type": "string"
                                },
                                {
                                  "type": "number"
                                },
                                {
                                  "type": "boolean"
                                },
                                {
                                  "nullable": true
                                },
                                {
                                  "nullable": true
                                }
                              ]
                            }
                          },
                          "featurePlanVersion": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "projectId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "createdAtM": {
                                "type": "number"
                              },
                              "updatedAtM": {
                                "type": "number"
                              },
                              "planVersionId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "featureId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "featureType": {
                                "type": "string",
                                "enum": ["flat", "tier", "package", "usage"]
                              },
                              "config": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["price"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["tierMode", "tiers"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["usageMode"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "description": "Units for the package"
                                      }
                                    },
                                    "required": ["price", "units"]
                                  }
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "stripeProductId": {
                                    "type": "string"
                                  },
                                  "realtime": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "aggregationMethod": {
                                "type": "string",
                                "enum": [
                                  "sum",
                                  "sum_all",
                                  "last_during_period",
                                  "count",
                                  "count_all",
                                  "max",
                                  "max_all"
                                ]
                              },
                              "order": {
                                "type": "number"
                              },
                              "defaultQuantity": {
                                "type": "integer",
                                "nullable": true,
                                "default": 1
                              },
                              "limit": {
                                "type": "integer",
                                "nullable": true
                              },
                              "hidden": {
                                "type": "boolean"
                              },
                              "feature": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 36
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "maxLength": 36
                                  },
                                  "createdAtM": {
                                    "type": "number"
                                  },
                                  "updatedAtM": {
                                    "type": "number"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "number"
                                  },
                                  "title": {
                                    "type": "string",
                                    "maxLength": 50
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "id",
                                  "projectId",
                                  "createdAtM",
                                  "updatedAtM",
                                  "slug",
                                  "code",
                                  "title",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "projectId",
                              "createdAtM",
                              "updatedAtM",
                              "planVersionId",
                              "featureId",
                              "featureType",
                              "config",
                              "metadata",
                              "aggregationMethod",
                              "order",
                              "hidden",
                              "feature"
                            ]
                          }
                        },
                        "required": [
                          "id",
                          "projectId",
                          "createdAtM",
                          "updatedAtM",
                          "customerId",
                          "subscriptionId",
                          "featurePlanVersionId",
                          "subscriptionItemId",
                          "subscriptionPhaseId",
                          "limit",
                          "units",
                          "usage",
                          "accumulatedUsage",
                          "realtime",
                          "type",
                          "validFrom",
                          "validTo",
                          "bufferPeriodDays",
                          "resetedAt",
                          "active",
                          "isCustom",
                          "lastUsageUpdateAt",
                          "metadata",
                          "featurePlanVersion"
                        ]
                      }
                    }
                  },
                  "required": [
                    "id",
                    "projectId",
                    "subscriptionId",
                    "planVersionId",
                    "paymentMethodId",
                    "billingAnchor",
                    "trialEndsAt",
                    "startAt",
                    "endAt",
                    "planVersion",
                    "customerEntitlements"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/{customerId}/getUsage": {
      "get": {
        "operationId": "customer.getUsage",
        "summary": "get usage",
        "description": "Get usage for a customer",
        "tags": ["customer"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The customer ID",
              "example": "cus_1H7KQFLr7RepUyQBKdnvY"
            },
            "required": true,
            "name": "customerId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the get usage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "planVersion": {
                      "type": "object",
                      "properties": {
                        "description": {
                          "type": "string"
                        },
                        "flatPrice": {
                          "type": "string"
                        },
                        "currentTotalPrice": {
                          "type": "string"
                        },
                        "billingConfig": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "billingInterval": {
                              "type": "string",
                              "enum": ["month", "year", "day", "minute", "onetime"]
                            },
                            "billingIntervalCount": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 12
                            },
                            "billingAnchor": {
                              "anyOf": [
                                {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 31,
                                  "description": "Days of the month. Pick a number between 1 and 31, if the month has less days, it will be the last day of the month"
                                },
                                {
                                  "type": "string",
                                  "enum": ["dayOfCreation"],
                                  "description": "the day of the creation of the subscription as the billing anchor"
                                }
                              ],
                              "default": "dayOfCreation"
                            },
                            "planType": {
                              "type": "string",
                              "enum": ["recurring", "onetime"]
                            }
                          },
                          "required": [
                            "name",
                            "billingInterval",
                            "billingIntervalCount",
                            "planType"
                          ]
                        }
                      },
                      "required": ["description", "flatPrice", "currentTotalPrice", "billingConfig"]
                    },
                    "subscription": {
                      "type": "object",
                      "properties": {
                        "planSlug": {
                          "type": "string"
                        },
                        "status": {
                          "type": "string",
                          "enum": [
                            "idle",
                            "renewing",
                            "changing",
                            "canceling",
                            "expiring",
                            "invoicing",
                            "invoiced",
                            "ending_trial",
                            "active",
                            "trialing",
                            "canceled",
                            "expired",
                            "past_due"
                          ]
                        },
                        "currentCycleEndAt": {
                          "type": "number"
                        },
                        "timezone": {
                          "type": "string"
                        },
                        "currentCycleStartAt": {
                          "type": "number"
                        },
                        "prorationFactor": {
                          "type": "number"
                        },
                        "prorated": {
                          "type": "boolean"
                        }
                      },
                      "required": [
                        "planSlug",
                        "status",
                        "currentCycleEndAt",
                        "timezone",
                        "currentCycleStartAt",
                        "prorationFactor",
                        "prorated"
                      ]
                    },
                    "phase": {
                      "type": "object",
                      "properties": {
                        "trialEndsAt": {
                          "type": "number",
                          "nullable": true
                        },
                        "endAt": {
                          "type": "number",
                          "nullable": true
                        },
                        "trialDays": {
                          "type": "number"
                        },
                        "isTrial": {
                          "type": "boolean"
                        }
                      },
                      "required": ["trialEndsAt", "endAt", "trialDays", "isTrial"]
                    },
                    "entitlement": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "featureSlug": {
                            "type": "string"
                          },
                          "featureType": {
                            "type": "string",
                            "enum": ["flat", "tier", "package", "usage"]
                          },
                          "isCustom": {
                            "type": "boolean"
                          },
                          "limit": {
                            "type": "number",
                            "nullable": true
                          },
                          "usage": {
                            "type": "number"
                          },
                          "freeUnits": {
                            "type": "number"
                          },
                          "max": {
                            "type": "number",
                            "nullable": true
                          },
                          "units": {
                            "type": "number",
                            "nullable": true
                          },
                          "included": {
                            "type": "number"
                          },
                          "featureVersion": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "projectId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "createdAtM": {
                                "type": "number"
                              },
                              "updatedAtM": {
                                "type": "number"
                              },
                              "planVersionId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "featureId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "featureType": {
                                "type": "string",
                                "enum": ["flat", "tier", "package", "usage"]
                              },
                              "config": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["price"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["tierMode", "tiers"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["usageMode"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "description": "Units for the package"
                                      }
                                    },
                                    "required": ["price", "units"]
                                  }
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "stripeProductId": {
                                    "type": "string"
                                  },
                                  "realtime": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "aggregationMethod": {
                                "type": "string",
                                "enum": [
                                  "sum",
                                  "sum_all",
                                  "last_during_period",
                                  "count",
                                  "count_all",
                                  "max",
                                  "max_all"
                                ]
                              },
                              "order": {
                                "type": "number"
                              },
                              "defaultQuantity": {
                                "type": "integer",
                                "nullable": true,
                                "default": 1
                              },
                              "limit": {
                                "type": "integer",
                                "nullable": true
                              },
                              "hidden": {
                                "type": "boolean"
                              },
                              "feature": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 36
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "maxLength": 36
                                  },
                                  "createdAtM": {
                                    "type": "number"
                                  },
                                  "updatedAtM": {
                                    "type": "number"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "number"
                                  },
                                  "title": {
                                    "type": "string",
                                    "maxLength": 50
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "id",
                                  "projectId",
                                  "createdAtM",
                                  "updatedAtM",
                                  "slug",
                                  "code",
                                  "title",
                                  "description"
                                ]
                              }
                            },
                            "required": [
                              "id",
                              "projectId",
                              "createdAtM",
                              "updatedAtM",
                              "planVersionId",
                              "featureId",
                              "featureType",
                              "config",
                              "metadata",
                              "aggregationMethod",
                              "order",
                              "hidden",
                              "feature"
                            ]
                          },
                          "price": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": [
                          "featureSlug",
                          "featureType",
                          "isCustom",
                          "limit",
                          "usage",
                          "freeUnits",
                          "max",
                          "units",
                          "included",
                          "featureVersion",
                          "price"
                        ]
                      }
                    }
                  },
                  "required": ["planVersion", "subscription", "phase", "entitlement"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/getPaymentMethods": {
      "post": {
        "operationId": "customer.getPaymentMethods",
        "summary": "get payment methods",
        "description": "Get payment methods for a customer",
        "tags": ["customer"],
        "requestBody": {
          "description": "Body of the request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The customer ID",
                    "example": "cus_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "provider": {
                    "type": "string",
                    "enum": ["stripe", "square"],
                    "description": "The payment provider",
                    "example": "stripe"
                  }
                },
                "required": ["customerId", "provider"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the get payment methods",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "string"
                      },
                      "name": {
                        "type": "string",
                        "nullable": true
                      },
                      "last4": {
                        "type": "string"
                      },
                      "expMonth": {
                        "type": "number"
                      },
                      "expYear": {
                        "type": "number"
                      },
                      "brand": {
                        "type": "string"
                      }
                    },
                    "required": ["id", "name"]
                  }
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/signUp": {
      "post": {
        "operationId": "customer.signUp",
        "summary": "sign up",
        "description": "Sign up a customer for a project",
        "tags": ["customer"],
        "requestBody": {
          "description": "Body of the request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string",
                    "minLength": 1,
                    "description": "The name of the customer",
                    "example": "John Doe"
                  },
                  "timezone": {
                    "type": "string",
                    "description": "The timezone of the customer, if passed null the system will use the project timezone",
                    "example": "UTC"
                  },
                  "defaultCurrency": {
                    "type": "string",
                    "enum": ["USD", "EUR"],
                    "description": "The default currency of the customer, if passed null the system will use the project currency",
                    "example": "USD"
                  },
                  "email": {
                    "type": "string",
                    "minLength": 1,
                    "format": "email",
                    "description": "The email of the customer",
                    "example": "test@example.com"
                  },
                  "billingInterval": {
                    "type": "string",
                    "enum": ["month", "year", "day", "minute", "onetime"],
                    "description": "The billing interval of the customer to be used for the subscription. If plan version is provided, the billing interval will be the same as the plan version. If plan slug is provided, the billing interval will be the default billing interval of the plan.",
                    "example": "month"
                  },
                  "planSlug": {
                    "type": "string",
                    "description": "If the plan id is not provided, you can pass a plan slug and the system will intelligently pick the lastest plan for that slug and sign up the customer for it",
                    "example": "PRO"
                  },
                  "planVersionId": {
                    "type": "string",
                    "description": "The plan version the customer is signing up for",
                    "example": "pv_1234567890"
                  },
                  "config": {
                    "type": "array",
                    "items": {
                      "type": "object",
                      "properties": {
                        "featurePlanId": {
                          "type": "string",
                          "description": "The feature plan id of the item",
                          "example": "feature_plan_123"
                        },
                        "featureSlug": {
                          "type": "string",
                          "description": "The feature slug of the item",
                          "example": "feature_slug_123"
                        },
                        "isUsage": {
                          "type": "boolean",
                          "description": "if the item is a usage item",
                          "example": true
                        },
                        "units": {
                          "type": "number",
                          "minimum": 1,
                          "description": "units of the feature the user is subscribed to",
                          "example": 100
                        },
                        "min": {
                          "type": "number",
                          "nullable": true,
                          "description": "minimum units of the feature the user is subscribed to",
                          "example": 100
                        },
                        "limit": {
                          "type": "number",
                          "nullable": true,
                          "description": "limit of the feature the user is subscribed to",
                          "example": 100
                        }
                      },
                      "required": ["featurePlanId", "featureSlug"]
                    },
                    "description": "The configuration of the subscription items. This is required if your features are quantity based when the customer needs to set them. Pass as empty if you want the system to automatically set the units from the plan defaults.",
                    "example": [
                      {
                        "featurePlanId": "feature_plan_123",
                        "featureSlug": "feature_slug_123",
                        "isUsage": true,
                        "units": 100
                      }
                    ]
                  },
                  "externalId": {
                    "type": "string",
                    "description": "The external id you want to associate with the customer. Could be the id of the user in your database",
                    "example": "1234567890"
                  },
                  "successUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The success url if the customer signs up. This is the url after the signup process, normally your dashboard",
                    "example": "https://example.com/dashboard"
                  },
                  "cancelUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The cancel url if the customer cancels the signup. This is the url after the signup process, normally your login page",
                    "example": "https://example.com/login"
                  }
                },
                "required": ["name", "email", "successUrl", "cancelUrl"],
                "description": "The customer sign up request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the customer sign up",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the signup was successful",
                      "example": true
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "The url to redirect the customer to, either to the success or cancel url",
                      "example": "https://example.com/dashboard"
                    },
                    "customerId": {
                      "type": "string",
                      "description": "The unprice customer id generated by the system for this customer",
                      "example": "cus_1234567890"
                    }
                  },
                  "required": ["success", "url", "customerId"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/customer/createPaymentMethod": {
      "post": {
        "operationId": "customer.createPaymentMethod",
        "summary": "create payment method",
        "description": "Create a payment method for a customer",
        "tags": ["customer"],
        "requestBody": {
          "description": "Body of the request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "paymentProvider": {
                    "type": "string",
                    "enum": ["stripe", "square"],
                    "description": "The payment provider code to use",
                    "example": "stripe"
                  },
                  "customerId": {
                    "type": "string",
                    "description": "The unprice customer id generated by the system for this customer",
                    "example": "cus_1234567890"
                  },
                  "successUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The success url if the customer signs up",
                    "example": "https://example.com/dashboard"
                  },
                  "cancelUrl": {
                    "type": "string",
                    "format": "uri",
                    "description": "The cancel url if the customer cancels the signup",
                    "example": "https://example.com/login"
                  }
                },
                "required": ["paymentProvider", "customerId", "successUrl", "cancelUrl"],
                "description": "The customer create payment method request"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the customer create payment method",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "success": {
                      "type": "boolean",
                      "description": "Whether the signup was successful",
                      "example": true
                    },
                    "url": {
                      "type": "string",
                      "format": "uri",
                      "description": "The url to redirect the customer to, either to the success or cancel url",
                      "example": "https://example.com/dashboard"
                    }
                  },
                  "required": ["success", "url"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/project/getFeatures": {
      "get": {
        "operationId": "project.getFeatures",
        "summary": "get features",
        "description": "Get features for a project",
        "tags": ["project"],
        "responses": {
          "200": {
            "description": "The result of the get features",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "features": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "projectId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "slug": {
                            "type": "string"
                          },
                          "code": {
                            "type": "number"
                          },
                          "title": {
                            "type": "string",
                            "maxLength": 50
                          },
                          "description": {
                            "type": "string",
                            "nullable": true
                          }
                        },
                        "required": ["id", "projectId", "slug", "code", "title", "description"]
                      }
                    }
                  },
                  "required": ["features"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/plans/getPlanVersion/{planVersionId}": {
      "get": {
        "operationId": "plans.getPlanVersion",
        "summary": "get plan version",
        "description": "Get a plan version by id",
        "tags": ["plans"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The plan version id",
              "example": "pv_1H7KQFLr7RepUyQBKdnvY"
            },
            "required": true,
            "name": "planVersionId",
            "in": "path"
          }
        ],
        "responses": {
          "200": {
            "description": "The result of the get plan version",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "planVersion": {
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "string",
                          "maxLength": 36
                        },
                        "projectId": {
                          "type": "string",
                          "maxLength": 36
                        },
                        "createdAtM": {
                          "type": "number"
                        },
                        "updatedAtM": {
                          "type": "number"
                        },
                        "planId": {
                          "type": "string",
                          "maxLength": 36
                        },
                        "description": {
                          "type": "string"
                        },
                        "latest": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "title": {
                          "type": "string",
                          "maxLength": 50
                        },
                        "tags": {
                          "type": "array",
                          "nullable": true,
                          "items": {
                            "type": "string"
                          }
                        },
                        "active": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "status": {
                          "type": "string",
                          "nullable": true,
                          "enum": ["draft", "published"]
                        },
                        "publishedAt": {
                          "type": "number",
                          "nullable": true
                        },
                        "publishedBy": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 36
                        },
                        "archived": {
                          "type": "boolean",
                          "nullable": true
                        },
                        "archivedAt": {
                          "type": "number",
                          "nullable": true
                        },
                        "archivedBy": {
                          "type": "string",
                          "nullable": true,
                          "maxLength": 36
                        },
                        "paymentProvider": {
                          "type": "string",
                          "enum": ["stripe", "square"]
                        },
                        "dueBehaviour": {
                          "type": "string",
                          "enum": ["cancel", "downgrade"]
                        },
                        "currency": {
                          "type": "string",
                          "enum": ["USD", "EUR"]
                        },
                        "billingConfig": {
                          "type": "object",
                          "properties": {
                            "name": {
                              "type": "string",
                              "minLength": 1
                            },
                            "billingInterval": {
                              "type": "string",
                              "enum": ["month", "year", "day", "minute", "onetime"]
                            },
                            "billingIntervalCount": {
                              "type": "integer",
                              "minimum": 1,
                              "maximum": 12
                            },
                            "billingAnchor": {
                              "anyOf": [
                                {
                                  "type": "integer",
                                  "minimum": 1,
                                  "maximum": 31,
                                  "description": "Days of the month. Pick a number between 1 and 31, if the month has less days, it will be the last day of the month"
                                },
                                {
                                  "type": "string",
                                  "enum": ["dayOfCreation"],
                                  "description": "the day of the creation of the subscription as the billing anchor"
                                }
                              ],
                              "default": "dayOfCreation"
                            },
                            "planType": {
                              "type": "string",
                              "enum": ["recurring", "onetime"]
                            }
                          },
                          "required": [
                            "name",
                            "billingInterval",
                            "billingIntervalCount",
                            "planType"
                          ],
                          "description": "The billing configuration for the plan version"
                        },
                        "whenToBill": {
                          "type": "string",
                          "enum": ["pay_in_advance", "pay_in_arrear"]
                        },
                        "gracePeriod": {
                          "type": "number"
                        },
                        "collectionMethod": {
                          "type": "string",
                          "enum": ["charge_automatically", "send_invoice"]
                        },
                        "trialDays": {
                          "type": "number"
                        },
                        "autoRenew": {
                          "type": "boolean"
                        },
                        "metadata": {
                          "type": "object",
                          "nullable": true,
                          "properties": {
                            "externalId": {
                              "type": "string"
                            }
                          }
                        },
                        "paymentMethodRequired": {
                          "type": "boolean"
                        },
                        "version": {
                          "type": "number"
                        },
                        "plan": {
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "string",
                              "maxLength": 36
                            },
                            "projectId": {
                              "type": "string",
                              "maxLength": 36
                            },
                            "createdAtM": {
                              "type": "number"
                            },
                            "updatedAtM": {
                              "type": "number"
                            },
                            "slug": {
                              "type": "string"
                            },
                            "active": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "description": {
                              "type": "string"
                            },
                            "metadata": {
                              "type": "object",
                              "nullable": true,
                              "properties": {
                                "externalId": {
                                  "type": "string"
                                }
                              }
                            },
                            "defaultPlan": {
                              "type": "boolean",
                              "nullable": true
                            },
                            "enterprisePlan": {
                              "type": "boolean",
                              "nullable": true
                            }
                          },
                          "required": [
                            "id",
                            "projectId",
                            "createdAtM",
                            "updatedAtM",
                            "slug",
                            "active",
                            "description",
                            "metadata",
                            "defaultPlan",
                            "enterprisePlan"
                          ],
                          "description": "The plan information"
                        },
                        "planFeatures": {
                          "type": "array",
                          "items": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "projectId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "createdAtM": {
                                "type": "number"
                              },
                              "updatedAtM": {
                                "type": "number"
                              },
                              "planVersionId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "featureId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "featureType": {
                                "type": "string",
                                "enum": ["flat", "tier", "package", "usage"]
                              },
                              "config": {
                                "anyOf": [
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["price"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["tierMode", "tiers"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1
                                      }
                                    },
                                    "required": ["usageMode"]
                                  },
                                  {
                                    "type": "object",
                                    "properties": {
                                      "tiers": {
                                        "type": "array",
                                        "items": {
                                          "type": "object",
                                          "properties": {
                                            "unitPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "flatPrice": {
                                              "type": "object",
                                              "properties": {
                                                "dinero": {
                                                  "type": "object",
                                                  "properties": {
                                                    "amount": {
                                                      "type": "number",
                                                      "description": "The amount of the dinero object"
                                                    },
                                                    "currency": {
                                                      "type": "object",
                                                      "properties": {
                                                        "code": {
                                                          "type": "string",
                                                          "description": "The currency code of the dinero object"
                                                        },
                                                        "base": {
                                                          "anyOf": [
                                                            {
                                                              "type": "number"
                                                            },
                                                            {
                                                              "type": "array",
                                                              "items": {
                                                                "type": "number"
                                                              }
                                                            }
                                                          ],
                                                          "description": "The base of the dinero object"
                                                        },
                                                        "exponent": {
                                                          "type": "number",
                                                          "description": "The exponent of the dinero object"
                                                        }
                                                      },
                                                      "required": ["code", "base", "exponent"]
                                                    },
                                                    "scale": {
                                                      "type": "number",
                                                      "description": "The scale of the dinero object"
                                                    }
                                                  },
                                                  "required": ["amount", "currency", "scale"]
                                                },
                                                "displayAmount": {
                                                  "type": "string",
                                                  "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                }
                                              },
                                              "required": ["dinero", "displayAmount"]
                                            },
                                            "firstUnit": {
                                              "type": "integer",
                                              "minimum": 1
                                            },
                                            "lastUnit": {
                                              "type": "integer",
                                              "nullable": true,
                                              "minimum": 1
                                            }
                                          },
                                          "required": [
                                            "unitPrice",
                                            "flatPrice",
                                            "firstUnit",
                                            "lastUnit"
                                          ]
                                        }
                                      },
                                      "price": {
                                        "type": "object",
                                        "properties": {
                                          "dinero": {
                                            "type": "object",
                                            "properties": {
                                              "amount": {
                                                "type": "number",
                                                "description": "The amount of the dinero object"
                                              },
                                              "currency": {
                                                "type": "object",
                                                "properties": {
                                                  "code": {
                                                    "type": "string",
                                                    "description": "The currency code of the dinero object"
                                                  },
                                                  "base": {
                                                    "anyOf": [
                                                      {
                                                        "type": "number"
                                                      },
                                                      {
                                                        "type": "array",
                                                        "items": {
                                                          "type": "number"
                                                        }
                                                      }
                                                    ],
                                                    "description": "The base of the dinero object"
                                                  },
                                                  "exponent": {
                                                    "type": "number",
                                                    "description": "The exponent of the dinero object"
                                                  }
                                                },
                                                "required": ["code", "base", "exponent"]
                                              },
                                              "scale": {
                                                "type": "number",
                                                "description": "The scale of the dinero object"
                                              }
                                            },
                                            "required": ["amount", "currency", "scale"]
                                          },
                                          "displayAmount": {
                                            "type": "string",
                                            "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                          }
                                        },
                                        "required": ["dinero", "displayAmount"]
                                      },
                                      "usageMode": {
                                        "type": "string",
                                        "enum": ["tier", "package", "unit"]
                                      },
                                      "tierMode": {
                                        "type": "string",
                                        "enum": ["volume", "graduated"]
                                      },
                                      "units": {
                                        "type": "integer",
                                        "minimum": 1,
                                        "description": "Units for the package"
                                      }
                                    },
                                    "required": ["price", "units"]
                                  }
                                ]
                              },
                              "metadata": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "stripeProductId": {
                                    "type": "string"
                                  },
                                  "realtime": {
                                    "type": "boolean"
                                  }
                                }
                              },
                              "aggregationMethod": {
                                "type": "string",
                                "enum": [
                                  "sum",
                                  "sum_all",
                                  "last_during_period",
                                  "count",
                                  "count_all",
                                  "max",
                                  "max_all"
                                ]
                              },
                              "order": {
                                "type": "number"
                              },
                              "defaultQuantity": {
                                "type": "integer",
                                "nullable": true,
                                "default": 1
                              },
                              "limit": {
                                "type": "integer",
                                "nullable": true
                              },
                              "hidden": {
                                "type": "boolean"
                              },
                              "displayFeatureText": {
                                "type": "string",
                                "description": "The text you can use to show the clients"
                              },
                              "feature": {
                                "type": "object",
                                "properties": {
                                  "id": {
                                    "type": "string",
                                    "maxLength": 36
                                  },
                                  "projectId": {
                                    "type": "string",
                                    "maxLength": 36
                                  },
                                  "createdAtM": {
                                    "type": "number"
                                  },
                                  "updatedAtM": {
                                    "type": "number"
                                  },
                                  "slug": {
                                    "type": "string"
                                  },
                                  "code": {
                                    "type": "number"
                                  },
                                  "title": {
                                    "type": "string",
                                    "maxLength": 50
                                  },
                                  "description": {
                                    "type": "string",
                                    "nullable": true
                                  }
                                },
                                "required": [
                                  "id",
                                  "projectId",
                                  "createdAtM",
                                  "updatedAtM",
                                  "slug",
                                  "code",
                                  "title",
                                  "description"
                                ],
                                "description": "The feature information"
                              }
                            },
                            "required": [
                              "id",
                              "projectId",
                              "createdAtM",
                              "updatedAtM",
                              "planVersionId",
                              "featureId",
                              "featureType",
                              "config",
                              "metadata",
                              "aggregationMethod",
                              "order",
                              "hidden",
                              "displayFeatureText",
                              "feature"
                            ]
                          }
                        },
                        "flatPrice": {
                          "type": "string",
                          "description": "Flat price of the plan"
                        }
                      },
                      "required": [
                        "id",
                        "projectId",
                        "createdAtM",
                        "updatedAtM",
                        "planId",
                        "description",
                        "latest",
                        "title",
                        "tags",
                        "active",
                        "status",
                        "publishedAt",
                        "publishedBy",
                        "archived",
                        "archivedAt",
                        "archivedBy",
                        "paymentProvider",
                        "dueBehaviour",
                        "currency",
                        "billingConfig",
                        "whenToBill",
                        "gracePeriod",
                        "collectionMethod",
                        "trialDays",
                        "autoRenew",
                        "metadata",
                        "paymentMethodRequired",
                        "version",
                        "plan",
                        "planFeatures",
                        "flatPrice"
                      ]
                    }
                  },
                  "required": ["planVersion"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/plans/listPlanVersions": {
      "post": {
        "operationId": "plans.listPlanVersions",
        "summary": "list all plan versions",
        "description": "List all plan versions for a project",
        "tags": ["plans"],
        "requestBody": {
          "description": "Body of the request",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "onlyPublished": {
                    "type": "boolean",
                    "description": "Whether to include published plan versions",
                    "example": true
                  },
                  "onlyEnterprisePlan": {
                    "type": "boolean",
                    "description": "Whether to include enterprise plan versions",
                    "example": false
                  },
                  "onlyLatest": {
                    "type": "boolean",
                    "description": "Whether to include the latest plan version",
                    "example": true
                  },
                  "billingInterval": {
                    "type": "string",
                    "enum": ["month", "year", "day", "minute", "onetime"],
                    "description": "The billing interval to filter the plan versions",
                    "example": "month"
                  },
                  "currency": {
                    "type": "string",
                    "enum": ["USD", "EUR"],
                    "description": "The currency to filter the plan versions",
                    "example": "USD"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the list plan versions",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "planVersions": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "projectId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "createdAtM": {
                            "type": "number"
                          },
                          "updatedAtM": {
                            "type": "number"
                          },
                          "planId": {
                            "type": "string",
                            "maxLength": 36
                          },
                          "description": {
                            "type": "string"
                          },
                          "latest": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "title": {
                            "type": "string",
                            "maxLength": 50
                          },
                          "tags": {
                            "type": "array",
                            "nullable": true,
                            "items": {
                              "type": "string"
                            }
                          },
                          "active": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "status": {
                            "type": "string",
                            "nullable": true,
                            "enum": ["draft", "published"]
                          },
                          "publishedAt": {
                            "type": "number",
                            "nullable": true
                          },
                          "publishedBy": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 36
                          },
                          "archived": {
                            "type": "boolean",
                            "nullable": true
                          },
                          "archivedAt": {
                            "type": "number",
                            "nullable": true
                          },
                          "archivedBy": {
                            "type": "string",
                            "nullable": true,
                            "maxLength": 36
                          },
                          "paymentProvider": {
                            "type": "string",
                            "enum": ["stripe", "square"]
                          },
                          "dueBehaviour": {
                            "type": "string",
                            "enum": ["cancel", "downgrade"]
                          },
                          "currency": {
                            "type": "string",
                            "enum": ["USD", "EUR"]
                          },
                          "billingConfig": {
                            "type": "object",
                            "properties": {
                              "name": {
                                "type": "string",
                                "minLength": 1
                              },
                              "billingInterval": {
                                "type": "string",
                                "enum": ["month", "year", "day", "minute", "onetime"]
                              },
                              "billingIntervalCount": {
                                "type": "integer",
                                "minimum": 1,
                                "maximum": 12
                              },
                              "billingAnchor": {
                                "anyOf": [
                                  {
                                    "type": "integer",
                                    "minimum": 1,
                                    "maximum": 31,
                                    "description": "Days of the month. Pick a number between 1 and 31, if the month has less days, it will be the last day of the month"
                                  },
                                  {
                                    "type": "string",
                                    "enum": ["dayOfCreation"],
                                    "description": "the day of the creation of the subscription as the billing anchor"
                                  }
                                ],
                                "default": "dayOfCreation"
                              },
                              "planType": {
                                "type": "string",
                                "enum": ["recurring", "onetime"]
                              }
                            },
                            "required": [
                              "name",
                              "billingInterval",
                              "billingIntervalCount",
                              "planType"
                            ],
                            "description": "The billing configuration for the plan version"
                          },
                          "whenToBill": {
                            "type": "string",
                            "enum": ["pay_in_advance", "pay_in_arrear"]
                          },
                          "gracePeriod": {
                            "type": "number"
                          },
                          "collectionMethod": {
                            "type": "string",
                            "enum": ["charge_automatically", "send_invoice"]
                          },
                          "trialDays": {
                            "type": "number"
                          },
                          "autoRenew": {
                            "type": "boolean"
                          },
                          "metadata": {
                            "type": "object",
                            "nullable": true,
                            "properties": {
                              "externalId": {
                                "type": "string"
                              }
                            }
                          },
                          "paymentMethodRequired": {
                            "type": "boolean"
                          },
                          "version": {
                            "type": "number"
                          },
                          "plan": {
                            "type": "object",
                            "properties": {
                              "id": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "projectId": {
                                "type": "string",
                                "maxLength": 36
                              },
                              "createdAtM": {
                                "type": "number"
                              },
                              "updatedAtM": {
                                "type": "number"
                              },
                              "slug": {
                                "type": "string"
                              },
                              "active": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "description": {
                                "type": "string"
                              },
                              "metadata": {
                                "type": "object",
                                "nullable": true,
                                "properties": {
                                  "externalId": {
                                    "type": "string"
                                  }
                                }
                              },
                              "defaultPlan": {
                                "type": "boolean",
                                "nullable": true
                              },
                              "enterprisePlan": {
                                "type": "boolean",
                                "nullable": true
                              }
                            },
                            "required": [
                              "id",
                              "projectId",
                              "createdAtM",
                              "updatedAtM",
                              "slug",
                              "active",
                              "description",
                              "metadata",
                              "defaultPlan",
                              "enterprisePlan"
                            ],
                            "description": "The plan information"
                          },
                          "planFeatures": {
                            "type": "array",
                            "items": {
                              "type": "object",
                              "properties": {
                                "id": {
                                  "type": "string",
                                  "maxLength": 36
                                },
                                "projectId": {
                                  "type": "string",
                                  "maxLength": 36
                                },
                                "createdAtM": {
                                  "type": "number"
                                },
                                "updatedAtM": {
                                  "type": "number"
                                },
                                "planVersionId": {
                                  "type": "string",
                                  "maxLength": 36
                                },
                                "featureId": {
                                  "type": "string",
                                  "maxLength": 36
                                },
                                "featureType": {
                                  "type": "string",
                                  "enum": ["flat", "tier", "package", "usage"]
                                },
                                "config": {
                                  "anyOf": [
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tiers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "unitPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "flatPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "firstUnit": {
                                                "type": "integer",
                                                "minimum": 1
                                              },
                                              "lastUnit": {
                                                "type": "integer",
                                                "nullable": true,
                                                "minimum": 1
                                              }
                                            },
                                            "required": [
                                              "unitPrice",
                                              "flatPrice",
                                              "firstUnit",
                                              "lastUnit"
                                            ]
                                          }
                                        },
                                        "price": {
                                          "type": "object",
                                          "properties": {
                                            "dinero": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount of the dinero object"
                                                },
                                                "currency": {
                                                  "type": "object",
                                                  "properties": {
                                                    "code": {
                                                      "type": "string",
                                                      "description": "The currency code of the dinero object"
                                                    },
                                                    "base": {
                                                      "anyOf": [
                                                        {
                                                          "type": "number"
                                                        },
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "number"
                                                          }
                                                        }
                                                      ],
                                                      "description": "The base of the dinero object"
                                                    },
                                                    "exponent": {
                                                      "type": "number",
                                                      "description": "The exponent of the dinero object"
                                                    }
                                                  },
                                                  "required": ["code", "base", "exponent"]
                                                },
                                                "scale": {
                                                  "type": "number",
                                                  "description": "The scale of the dinero object"
                                                }
                                              },
                                              "required": ["amount", "currency", "scale"]
                                            },
                                            "displayAmount": {
                                              "type": "string",
                                              "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                            }
                                          },
                                          "required": ["dinero", "displayAmount"]
                                        },
                                        "usageMode": {
                                          "type": "string",
                                          "enum": ["tier", "package", "unit"]
                                        },
                                        "tierMode": {
                                          "type": "string",
                                          "enum": ["volume", "graduated"]
                                        },
                                        "units": {
                                          "type": "integer",
                                          "minimum": 1
                                        }
                                      },
                                      "required": ["price"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "price": {
                                          "type": "object",
                                          "properties": {
                                            "dinero": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount of the dinero object"
                                                },
                                                "currency": {
                                                  "type": "object",
                                                  "properties": {
                                                    "code": {
                                                      "type": "string",
                                                      "description": "The currency code of the dinero object"
                                                    },
                                                    "base": {
                                                      "anyOf": [
                                                        {
                                                          "type": "number"
                                                        },
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "number"
                                                          }
                                                        }
                                                      ],
                                                      "description": "The base of the dinero object"
                                                    },
                                                    "exponent": {
                                                      "type": "number",
                                                      "description": "The exponent of the dinero object"
                                                    }
                                                  },
                                                  "required": ["code", "base", "exponent"]
                                                },
                                                "scale": {
                                                  "type": "number",
                                                  "description": "The scale of the dinero object"
                                                }
                                              },
                                              "required": ["amount", "currency", "scale"]
                                            },
                                            "displayAmount": {
                                              "type": "string",
                                              "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                            }
                                          },
                                          "required": ["dinero", "displayAmount"]
                                        },
                                        "tierMode": {
                                          "type": "string",
                                          "enum": ["volume", "graduated"]
                                        },
                                        "tiers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "unitPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "flatPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "firstUnit": {
                                                "type": "integer",
                                                "minimum": 1
                                              },
                                              "lastUnit": {
                                                "type": "integer",
                                                "nullable": true,
                                                "minimum": 1
                                              }
                                            },
                                            "required": [
                                              "unitPrice",
                                              "flatPrice",
                                              "firstUnit",
                                              "lastUnit"
                                            ]
                                          }
                                        },
                                        "usageMode": {
                                          "type": "string",
                                          "enum": ["tier", "package", "unit"]
                                        },
                                        "units": {
                                          "type": "integer",
                                          "minimum": 1
                                        }
                                      },
                                      "required": ["tierMode", "tiers"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "price": {
                                          "type": "object",
                                          "properties": {
                                            "dinero": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount of the dinero object"
                                                },
                                                "currency": {
                                                  "type": "object",
                                                  "properties": {
                                                    "code": {
                                                      "type": "string",
                                                      "description": "The currency code of the dinero object"
                                                    },
                                                    "base": {
                                                      "anyOf": [
                                                        {
                                                          "type": "number"
                                                        },
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "number"
                                                          }
                                                        }
                                                      ],
                                                      "description": "The base of the dinero object"
                                                    },
                                                    "exponent": {
                                                      "type": "number",
                                                      "description": "The exponent of the dinero object"
                                                    }
                                                  },
                                                  "required": ["code", "base", "exponent"]
                                                },
                                                "scale": {
                                                  "type": "number",
                                                  "description": "The scale of the dinero object"
                                                }
                                              },
                                              "required": ["amount", "currency", "scale"]
                                            },
                                            "displayAmount": {
                                              "type": "string",
                                              "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                            }
                                          },
                                          "required": ["dinero", "displayAmount"]
                                        },
                                        "usageMode": {
                                          "type": "string",
                                          "enum": ["tier", "package", "unit"]
                                        },
                                        "tierMode": {
                                          "type": "string",
                                          "enum": ["volume", "graduated"]
                                        },
                                        "tiers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "unitPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "flatPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "firstUnit": {
                                                "type": "integer",
                                                "minimum": 1
                                              },
                                              "lastUnit": {
                                                "type": "integer",
                                                "nullable": true,
                                                "minimum": 1
                                              }
                                            },
                                            "required": [
                                              "unitPrice",
                                              "flatPrice",
                                              "firstUnit",
                                              "lastUnit"
                                            ]
                                          }
                                        },
                                        "units": {
                                          "type": "integer",
                                          "minimum": 1
                                        }
                                      },
                                      "required": ["usageMode"]
                                    },
                                    {
                                      "type": "object",
                                      "properties": {
                                        "tiers": {
                                          "type": "array",
                                          "items": {
                                            "type": "object",
                                            "properties": {
                                              "unitPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "flatPrice": {
                                                "type": "object",
                                                "properties": {
                                                  "dinero": {
                                                    "type": "object",
                                                    "properties": {
                                                      "amount": {
                                                        "type": "number",
                                                        "description": "The amount of the dinero object"
                                                      },
                                                      "currency": {
                                                        "type": "object",
                                                        "properties": {
                                                          "code": {
                                                            "type": "string",
                                                            "description": "The currency code of the dinero object"
                                                          },
                                                          "base": {
                                                            "anyOf": [
                                                              {
                                                                "type": "number"
                                                              },
                                                              {
                                                                "type": "array",
                                                                "items": {
                                                                  "type": "number"
                                                                }
                                                              }
                                                            ],
                                                            "description": "The base of the dinero object"
                                                          },
                                                          "exponent": {
                                                            "type": "number",
                                                            "description": "The exponent of the dinero object"
                                                          }
                                                        },
                                                        "required": ["code", "base", "exponent"]
                                                      },
                                                      "scale": {
                                                        "type": "number",
                                                        "description": "The scale of the dinero object"
                                                      }
                                                    },
                                                    "required": ["amount", "currency", "scale"]
                                                  },
                                                  "displayAmount": {
                                                    "type": "string",
                                                    "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                                  }
                                                },
                                                "required": ["dinero", "displayAmount"]
                                              },
                                              "firstUnit": {
                                                "type": "integer",
                                                "minimum": 1
                                              },
                                              "lastUnit": {
                                                "type": "integer",
                                                "nullable": true,
                                                "minimum": 1
                                              }
                                            },
                                            "required": [
                                              "unitPrice",
                                              "flatPrice",
                                              "firstUnit",
                                              "lastUnit"
                                            ]
                                          }
                                        },
                                        "price": {
                                          "type": "object",
                                          "properties": {
                                            "dinero": {
                                              "type": "object",
                                              "properties": {
                                                "amount": {
                                                  "type": "number",
                                                  "description": "The amount of the dinero object"
                                                },
                                                "currency": {
                                                  "type": "object",
                                                  "properties": {
                                                    "code": {
                                                      "type": "string",
                                                      "description": "The currency code of the dinero object"
                                                    },
                                                    "base": {
                                                      "anyOf": [
                                                        {
                                                          "type": "number"
                                                        },
                                                        {
                                                          "type": "array",
                                                          "items": {
                                                            "type": "number"
                                                          }
                                                        }
                                                      ],
                                                      "description": "The base of the dinero object"
                                                    },
                                                    "exponent": {
                                                      "type": "number",
                                                      "description": "The exponent of the dinero object"
                                                    }
                                                  },
                                                  "required": ["code", "base", "exponent"]
                                                },
                                                "scale": {
                                                  "type": "number",
                                                  "description": "The scale of the dinero object"
                                                }
                                              },
                                              "required": ["amount", "currency", "scale"]
                                            },
                                            "displayAmount": {
                                              "type": "string",
                                              "pattern": "^\\d{1,10}(\\.\\d{1,10})?$"
                                            }
                                          },
                                          "required": ["dinero", "displayAmount"]
                                        },
                                        "usageMode": {
                                          "type": "string",
                                          "enum": ["tier", "package", "unit"]
                                        },
                                        "tierMode": {
                                          "type": "string",
                                          "enum": ["volume", "graduated"]
                                        },
                                        "units": {
                                          "type": "integer",
                                          "minimum": 1,
                                          "description": "Units for the package"
                                        }
                                      },
                                      "required": ["price", "units"]
                                    }
                                  ]
                                },
                                "metadata": {
                                  "type": "object",
                                  "nullable": true,
                                  "properties": {
                                    "stripeProductId": {
                                      "type": "string"
                                    },
                                    "realtime": {
                                      "type": "boolean"
                                    }
                                  }
                                },
                                "aggregationMethod": {
                                  "type": "string",
                                  "enum": [
                                    "sum",
                                    "sum_all",
                                    "last_during_period",
                                    "count",
                                    "count_all",
                                    "max",
                                    "max_all"
                                  ]
                                },
                                "order": {
                                  "type": "number"
                                },
                                "defaultQuantity": {
                                  "type": "integer",
                                  "nullable": true,
                                  "default": 1
                                },
                                "limit": {
                                  "type": "integer",
                                  "nullable": true
                                },
                                "hidden": {
                                  "type": "boolean"
                                },
                                "displayFeatureText": {
                                  "type": "string",
                                  "description": "The text you can use to show the clients"
                                },
                                "feature": {
                                  "type": "object",
                                  "properties": {
                                    "id": {
                                      "type": "string",
                                      "maxLength": 36
                                    },
                                    "projectId": {
                                      "type": "string",
                                      "maxLength": 36
                                    },
                                    "createdAtM": {
                                      "type": "number"
                                    },
                                    "updatedAtM": {
                                      "type": "number"
                                    },
                                    "slug": {
                                      "type": "string"
                                    },
                                    "code": {
                                      "type": "number"
                                    },
                                    "title": {
                                      "type": "string",
                                      "maxLength": 50
                                    },
                                    "description": {
                                      "type": "string",
                                      "nullable": true
                                    }
                                  },
                                  "required": [
                                    "id",
                                    "projectId",
                                    "createdAtM",
                                    "updatedAtM",
                                    "slug",
                                    "code",
                                    "title",
                                    "description"
                                  ],
                                  "description": "The feature information"
                                }
                              },
                              "required": [
                                "id",
                                "projectId",
                                "createdAtM",
                                "updatedAtM",
                                "planVersionId",
                                "featureId",
                                "featureType",
                                "config",
                                "metadata",
                                "aggregationMethod",
                                "order",
                                "hidden",
                                "displayFeatureText",
                                "feature"
                              ]
                            }
                          },
                          "flatPrice": {
                            "type": "string",
                            "description": "Flat price of the plan"
                          }
                        },
                        "required": [
                          "id",
                          "projectId",
                          "createdAtM",
                          "updatedAtM",
                          "planId",
                          "description",
                          "latest",
                          "title",
                          "tags",
                          "active",
                          "status",
                          "publishedAt",
                          "publishedBy",
                          "archived",
                          "archivedAt",
                          "archivedBy",
                          "paymentProvider",
                          "dueBehaviour",
                          "currency",
                          "billingConfig",
                          "whenToBill",
                          "gracePeriod",
                          "collectionMethod",
                          "trialDays",
                          "autoRenew",
                          "metadata",
                          "paymentMethodRequired",
                          "version",
                          "plan",
                          "planFeatures",
                          "flatPrice"
                        ]
                      }
                    }
                  },
                  "required": ["planVersions"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/paymentProvider/stripe/signUp/{sessionId}/{projectId}": {
      "get": {
        "summary": "stripe sign up",
        "description": "This endpoint is called by stripe after the customer has signed up. No webhook is needed.",
        "tags": ["paymentProvider"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The project id the customer is signing up for",
              "example": "1234567890"
            },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The stripe session generated by the sign up process",
              "example": "cs_live_a1b2c3d4e5f6g7h8i9j0"
            },
            "required": true,
            "name": "sessionId",
            "in": "path"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect",
            "headers": {
              "Location": {
                "description": "URL to redirect to",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/paymentProvider/stripe/setup/{sessionId}/{projectId}": {
      "get": {
        "summary": "stripe setup",
        "description": "This endpoint is called by stripe after the customer setup a payment method. No webhook is needed.",
        "tags": ["paymentProvider"],
        "parameters": [
          {
            "schema": {
              "type": "string",
              "description": "The project id the customer is signing up for",
              "example": "1234567890"
            },
            "required": true,
            "name": "projectId",
            "in": "path"
          },
          {
            "schema": {
              "type": "string",
              "description": "The stripe session generated by the sign up process",
              "example": "cs_live_a1b2c3d4e5f6g7h8i9j0"
            },
            "required": true,
            "name": "sessionId",
            "in": "path"
          }
        ],
        "responses": {
          "302": {
            "description": "Redirect",
            "headers": {
              "Location": {
                "description": "URL to redirect to",
                "schema": {
                  "type": "string",
                  "format": "uri"
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/analytics/usage": {
      "post": {
        "operationId": "analytics.getUsage",
        "summary": "get usage",
        "description": "Get usage for a customer in a given range",
        "tags": ["analytics"],
        "requestBody": {
          "description": "Body of the request for the get usage",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The customer ID if you want to get the usage for a specific customer",
                    "example": "cus_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The project ID (optional, if not provided, the project ID will be the one of the key)",
                    "example": "project_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "range": {
                    "type": "string",
                    "enum": ["60m", "24h", "7d", "30d", "90d"],
                    "description": "The range of the usage, last hour, day, week or month",
                    "example": "24h"
                  }
                },
                "required": ["projectId", "range"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the get usage",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "usage": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "projectId": {
                            "type": "string"
                          },
                          "customerId": {
                            "type": "string"
                          },
                          "entitlementId": {
                            "type": "string"
                          },
                          "featureSlug": {
                            "type": "string"
                          },
                          "count": {
                            "type": "number"
                          },
                          "sum": {
                            "type": "number"
                          },
                          "max": {
                            "type": "number"
                          },
                          "last_during_period": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "projectId",
                          "featureSlug",
                          "count",
                          "sum",
                          "max",
                          "last_during_period"
                        ]
                      }
                    }
                  },
                  "required": ["usage"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    },
    "/v1/analytics/verifications": {
      "post": {
        "operationId": "analytics.getVerifications",
        "summary": "get verifications",
        "description": "Get verifications for a customer in a given range",
        "tags": ["analytics"],
        "requestBody": {
          "description": "Body of the request for the get verifications",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "customerId": {
                    "type": "string",
                    "description": "The customer ID if you want to get the verifications for a specific customer",
                    "example": "cus_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "projectId": {
                    "type": "string",
                    "description": "The project ID (optional, if not provided, the project ID will be the one of the key)",
                    "example": "project_1H7KQFLr7RepUyQBKdnvY"
                  },
                  "range": {
                    "type": "string",
                    "enum": ["60m", "24h", "7d", "30d", "90d"],
                    "description": "The range of the verifications, last hour, day, week or month",
                    "example": "24h"
                  }
                },
                "required": ["projectId", "range"]
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "The result of the get verifications",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "verifications": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "projectId": {
                            "type": "string"
                          },
                          "customerId": {
                            "type": "string"
                          },
                          "entitlementId": {
                            "type": "string"
                          },
                          "featureSlug": {
                            "type": "string"
                          },
                          "count": {
                            "type": "number"
                          },
                          "p50_latency": {
                            "type": "number"
                          },
                          "p95_latency": {
                            "type": "number"
                          },
                          "p99_latency": {
                            "type": "number"
                          }
                        },
                        "required": [
                          "projectId",
                          "featureSlug",
                          "count",
                          "p50_latency",
                          "p95_latency",
                          "p99_latency"
                        ]
                      }
                    }
                  },
                  "required": ["verifications"]
                }
              }
            }
          },
          "400": {
            "description": "The server cannot or will not process the request due to something that is perceived to be a client error (e.g., malformed request syntax, invalid request message framing, or deceptive request routing).",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrBadRequest"
                }
              }
            }
          },
          "401": {
            "description": "Although the HTTP standard specifies \"unauthorized\", semantically this response means \"unauthenticated\". That is, the client must authenticate itself to get the requested response.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrUnauthorized"
                }
              }
            }
          },
          "403": {
            "description": "The client does not have access rights to the content; that is, it is unauthorized, so the server is refusing to give the requested resource. Unlike 401 Unauthorized, the client's identity is known to the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrForbidden"
                }
              }
            }
          },
          "404": {
            "description": "The server cannot find the requested resource. In the browser, this means the URL is not recognized. In an API, this can also mean that the endpoint is valid but the resource itself does not exist. Servers may also send this response instead of 403 Forbidden to hide the existence of a resource from an unauthorized client. This response code is probably the most well known due to its frequent occurrence on the web.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrNotFound"
                }
              }
            }
          },
          "409": {
            "description": "This response is sent when a request conflicts with the current state of the server.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrConflict"
                }
              }
            }
          },
          "412": {
            "description": "The requested operation cannot be completed because certain conditions were not met. This typically occurs when a required resource state or version check fails.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrPreconditionFailed"
                }
              }
            }
          },
          "429": {
            "description": "The user has sent too many requests in a given amount of time (\"rate limiting\")",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrTooManyRequests"
                }
              }
            }
          },
          "500": {
            "description": "The server has encountered a situation it does not know how to handle.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ErrInternalServerError"
                }
              }
            }
          }
        }
      }
    }
  }
}
